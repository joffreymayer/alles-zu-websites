[["index.html", "My Knowledge Database for Websites Chapter 1 Computer Set-Up 1.1 Mac Tricks 1.2 Virtual Environment 1.3 R Markdown 1.4 Create a Bookdown-Website 1.5 Show Hidden Files? 1.6 For the Future", " My Knowledge Database for Websites Joffrey Anthony 2022-02-14 Chapter 1 Computer Set-Up When building projects efficiently, you will need different set-ups in order to have everything in your code work properly, not only on your own machine, but also on other machines, for example of another team-member. 1.1 Mac Tricks Before we start with the whole set-up, you will also need to know how to work more efficiently with your Macbook-Computer. Those ‚Äútricks‚Äù will be useful for many other programs you will need when working in the field of datascience. 1.1.1 √ñffne die Developer-Tools von Google-Chrome command + shift + i 1.1.2 Speichern command + s 1.1.3 Speichern Unter shift + option + command + s 1.1.4 Finder command + leerschlag 1.1.5 Programm schliessen command + q 1.1.6 Neuer Ordner shift + command + n 1.1.7 Tilde Zeichen Das ist n√ºtzlich f√ºr shortcuts im Terminal, wenn man das Working Directory festlegt: option + n 1.1.8 Backslash Useful for paths within the Directory: option + shift + 7 1.1.9 Screenshot vom Bildschirm command + shift + 3 1.1.10 Teil des Bildschirms Screen-Schoten shift + command + 4 1.1.11 Verlauf l√∂schen in Chrome Browser shift + command + entfernen 1.1.12 Verlauf l√∂schen Safari command + alt + e 1.1.13 Bildschirm Aufnahme Funktioniert nur, wenn QuickTime Player aktiv ist: option + command + n 1.1.14 Lesezeichen in Google Chrome command + d 1.1.15 Search Console Pop Up option + command + j 1.1.16 Format Kopieren einer Zelle (in Numbers) option + command + c 1.1.17 Format √ºbertragen einer Zelle (in Numbers) option + command + v 1.1.18 Switch between Applications on your computer command + tab 1.1.19 Move Forward through Tabs control + tab 1.1.20 Zahl als Exponent Geht nur in Pages oder Tablett!: shift + control + command + ‚Äû+‚Äú-Zeichen W√ÑHREND man die Zahl mit der Maus markiert Dann ist sie noch ‚Äûnormal‚Äú und nicht tiefgestellt ‚Äî&gt; also so: zum Beispiel: 2. 1.1.21 Source-Code einer Webseite aufschalten Option + CMD + u im Browser dr√ºcken 1.1.22 Interaktive Code-Ansicht f√ºr das Abchecken von Webseiten fn + F12-Taste auf Touch Bar dr√ºcken 1.1.23 Approximate Symbol ‚âà option + x 1.2 Virtual Environment Because the libraries you work with in your projects will be updated over time (this is generally bad news, since this will cause all sorts of dependency problems across your libaries you use), it is crucial to understand that you will need a virtual environment (venv). There, you will install all the libraries you need. The major advantage here, is that you can control the version you install the library. Furthermore, you can send the venv to another computer and the people will download exactly the versions of each library. This allows that your code will always work, independently of the machine you will use! There will be no dependency problems anymore, which is a huge win.. :) 1.2.1 Create a venv Go to your terminal and plug in the following code: conda create -n YOUR-VENVIRONMENT-NAME-HERE python=3.6 1.2.2 Activate your newly created venv Weirdly though, you also need to activate the environment you created above. Plug in the following code: source activate YOUR-ENVIRONMENT-NAME Note that the code above can also be used to activate virtual environments you created in the past! =) 1.2.3 Install packages Now that you are in your new venv, you can start downloading some packages: python -m pip install SOME-PACKAGES 1.2.4 Overview of packages To check your packages within your venv, simply type: conda list 1.2.5 Overview of every venv To check all the venv I created, simply type: conda env list 1.2.6 Execute any python skript In order to execute a Python-script, you will need to head towards the directory that the .py-file is and - then - type in: cd go-to-the-dir-where-your-file-is python my-script.py 1.2.7 Deactivate the venv After you have completed what you wanted, you will need to shut-down the venv. Simply type: conda deactivate 1.2.8 Delete a venv Simply type: conda env remove -n my-new-env 1.3 R Markdown When writing Code, I recommend you to use .Rmd-Documents, which will allow you to combine both, text, as well as Code (in R, Python, or any other language of your choice). Actually, this document is written in .Rmd-Files, where I combine the text, with so-called ‚Äúcode-snippets‚Äù, like the follwing: This is a Code-Snippet When writing Code in R-Markdown, it will be useful for you to know when: to execute code wihtin a code-snippet and where not. 1.3.1 Hide Source Code This will be done with echo = FALSE: ## [1] 2 With figures, you need fig.show = 'hide' in R: plot(cars) To hide warning-messages, just use message = FALSE: message(&quot;You will not see the message.&quot;) 1.3.2 Execute a Code-Chunk without showing any Output You will get an output, e.g. the code will execute, but you will not show the code. 1.3.3 Do NOT execute a Code-Chunk If you want to show code for demonstration purposes - like on this Website - you will probably want to only show the code, but not execute it. This is also possible with eval=FALSE: 1.3.4 RMarkdown- VS. Markdown-Files Verwende &lt;ins&gt;&lt;/ins&gt; als HTML, um Texte zu Unterstreichen. Achtung : Der HTML-Tag &lt;u&gt;&lt;/u&gt; geht nicht in .rm-files. Lustigerweise funktioniert &lt;u&gt;&lt;/u&gt; jedoch in .Rmd (= R Markdown) üòÇ 1.3.5 N√ºtzliche Hexadecimals Hexadecimal code for the left square-bracket = &amp;#91; ‚Äì&gt; Ich muss das so machen mit den eckigen Klammern, weil [] wird f√ºr Links &amp; Bilder verwendet in Markdown  Hexadecimal code for the right square-bracket = &amp;#93; ‚Äì&gt; Ich muss das so machen mit den eckigen Klammern, weil [] wird f√ºr Links &amp; Bilder verwendet in Markdown  1.4 Create a Bookdown-Website Use this Bookdown-Template to create an awesome website like this one, you are currently at right now. Follow all the instruction of this 5 Minutes Youtube-Video. 1.5 Show Hidden Files? shift + command + \".\"-Taste = Use this shortcut when you are in your Finder on your mac, where you can see all your directories. You will see that your Mac hides many files from you that end in ., for example a .gitignore-file (there are many more other files like this one‚Ä¶). Why is this useful? Because - if you ever need to change to change to a new computer - you will need to setup this new computer. Using hidden .-Files on your old computer will help you to automate this process. There is a Youtube-Tutorial on how to configure your new computer exactly like your old computer. 1.6 For the Future Check out this Github-Repo with many free Open-Source Softwares to use: https://github.com/RunaCapital/awesome-oss-alternatives "],["seo.html", "Chapter 2 SEO 2.1 Outline 2.2 PDFs", " Chapter 2 SEO F√ºr die Webseiten-Indexierung innerhalb der Google-Suchmaschine ist es von gr√∂sster Bedeutung, dass du die Kunst des Seo (Search Engine Optimization) beherrschts. 2.1 Outline Das Wichtigste, damit deine Webseite auf dem Internet effizient in der Google-Suche gefunden wird - idealerweise auf #1 - ist eine ‚Äúkorrekte‚Äù HTML-Struktur (= Outline) zu haben. Seite, um dein aktuelles Outline zu checken: https://gsnedders.html5.org/outliner/ Beispiel, f√ºr ein korrektes Outline f√ºr das Keyword Accuphase und der URL https://audiophil-dreams.com/accuphase.html 2.1.1 Wenn dein Outline ‚Äúfalsch‚Äù ist Falls du nicht zufrieden bist mit deinem aktuellen Outline, dann empfehle ich dir die folgende Methode: https://www.youtube.com/watch?v=QDq-KVE5ZSA 2.2 PDFs Ein PDF wird von Google grunds√§tzlich automatisch in die Suchmaschine aufgenommen. Oftmals verwendest du PDFs jedoch als Erg√§nzungen zu den Type in the following into you .htaccess-File, for Appache-Servers: &lt;Files ~ &quot;\\.pdf$&quot;&gt; Header set X-Robots-Tag &quot;noindex, nofollow&quot; &lt;/Files&gt; If you have NGINX, you need this code instead: location ~* \\.pdf$ { add_header X-Robots-Tag &quot;noindex, nofollow&quot;; } To check if it worked, you need to view the HTTP Header of your PDF. You can do this via the developer tools in the Google Chrome Browser (by hitting F12). Developer-Tools For a more precise explanation, I recommend this site. This is the output you should see being printed If the solution above does not work, I have found an alternative way: &lt;FilesMatch &quot;.pdf$&quot;&gt; Header set X-Robots-Tag &quot;noindex, nofollow&quot; &lt;/FilesMatch&gt; Quelle: (Google Developers, Teil 1)[https://developers.google.com/search/docs/advanced/robots/robots_meta_tag] How can I prevent my PDF files from appearing in search results; or if they already do, how can I remove them? The simplest way to prevent PDF documents from appearing in search results is to add an X-Robots-Tag: noindex in the HTTP header used to serve the file. If they‚Äôre already indexed, they‚Äôll drop out over time if you use the X-Robot-Tag with the noindex directive. For faster removals, you can use the URL removal tool in Google Webmaster Tools. Quelle: Google-Developers, Teil 2 "],["webdevelopment.html", "Chapter 3 Webdevelopment 3.1 Synonyme 3.2 Definitionen 3.3 Image-Management 3.4 How Front-End &amp; Backend work together 3.5 How to build and think about an Application", " Chapter 3 Webdevelopment Hier liste ich allgemein N√ºtzliches &amp; Begriffe zum Thema ‚ÄúWebDev‚Äù. 3.1 Synonyme Backend // Server Constraint // Rule // Annahme(n) (above the) Fold // Viewport // Alles, was beim Laden einer HTML-Seite ‚Äúvisible‚Äù wird auf dem Screen eines Users Store data (for example, in an array) // present data Toggle // Ein- &amp; Ausschaltknopf user agent // browser Weiterleitung // forwarding // routing(?) Parse // In der Umwandlung A --&gt; B, ist mit dem Pfeil das ‚Äúparsen‚Äù gemeint! Beispiel: Umwandlung - beispielsweise der HTML-Sprache - in die Dokumentstruktur ‚ÄúDOM‚Äù, damit diese - via einem Renderer - visuell dargestellt werden kann im Browser. DPR // device-pixel-ratio 3.2 Definitionen Art Direction Problem: This is the problem of a responsive image, which - on the Computer // landscape-mode - you can see the relevant parts of the image, but - on an Ipad // Iphone // potrait-mode - you need to crop the image differently, otherwise you . This problem can be solved with the &lt;picture&gt;- &amp; &lt;source&gt;-element in HTML (as well as the srcset-attribute in the CSS of the &lt;source-element), that allows you tell the browser, which image it needs to select, based on the screen-size it faces. Bandwidth: Bandwidth in website hosting is the amount of data your website can transfer to your users in a given amount of time. Why is this important: When you deal with images, especially for smaller screens, such as phones. The problem here is, that a very big images can take alot of bandwidth (up to 60%). As a consequence, it slows down the performance of the site, which is the most important thing Google cares about when ranking websites! CRUD: This is an acronym, which refers to the 4 functions, that are considered necessary to implement a persistent storage application: creat read, update and delete. Example of a CRUD Application: Facebook, Instagram or TikTok, because each of those apps lets you: C- Create posts, videos, comments, likes etc. R- Read posts, view pictures, see like counts, see followers of other users etc. U- Edit posts, pictures, comments, profiles and update them etc. and finally D- Delete posts, pictures, comments, videos etc. Dependency // Dependencies: A dependency is a third-party bit of software that was probably written by someone else and ideally solves a single problem for you. A web project can have any number of dependencies, ranging from none to many, and your dependencies might include sub-dependencies that you didn‚Äôt explicitly install ‚Äî your dependencies may have their own dependencies. Example: A useful dependency that your project might need is some code to calculate relative dates as human-readable text. You could certainly code this yourself, but there‚Äôs a strong chance that someone else has already solved this problem ‚Äî Vorteil 1: Why waste time reinventing the wheel? Vorteil 2: Moreover, a reliable third-party dependency will likely have been tested in a lot of different situations, making it more robust and cross-browser compatible than your own solution. Package Manager: A package manager is a system that will manage your project dependencies. Example: When you use a dependenciy // third-party code, you will need to update it, if a new version gets released. If you have MANY dependencies, then you will need a package manager such as npm, because it will guarantee that the updated code is added and the old one is removed cleanly. Why should you use a packet manager?: In theory, you may not need a package manager and you could manually download and store your project dependencies, but a package manager will seamlessly handle installing and uninstalling packages. Important Detail about npm: The npm packet manager for JavaScript is the analog thing as a virtual environment in python! Quelle: See the last answer on this Stack-Overflow thread. Usability Testing: Suche jemand, der deine Webseite austestet, die du gerade konstruiert hast. Er soll dir ein ehrliches Feedback geben. Wichtig: We test the Site, not the user. It is important that the user knows, that he is not tested, but rather the website. The user can‚Äôt do anything wrong. 3.3 Image-Management A website‚Äôs browser has the task of downloading those images when it reads an HTML-document. Most of the time, images are the entities that need the most time to load on a website, which is why a site with many images can have a big (negative) impact on the website‚Äôs performance, because many images take a looot of time to load and - therefore - you will have a poor user-experience, especially on mobile. That‚Äôs why you need a good image-management when building websites. The following areas lead to a better image-management and - hence - better site-performance: Resolution of images Caching strategies tha use CDNs Implement Lazy-Loading 3.3.1 Resolution of images When you need a responsive-solution for your images, the least complicated thing to do, is to tackle the image-resolution of your images that are displayed on the screen. It may seem complicated at first sight, but understanding this chapter will be key for later simplicity &amp; a significant increase in the site‚Äôs performance. 3.3.2 The Problem As you may know, I like to show my visitors on the site a beautiful hero-image. I am convinced that a it increases the visitor‚Äôs interest in the site. However - from a technical point of view - you get terrible LCP-Scores (= largest contentful paint), since the mermory-heavy image you need to show to the user needs to be downloaded from a server. This can take a large amount of data to transfer (up to 60%) - especially when big images are requested from a user // browser to the server - which is why the loading time can be very long. As a consequence, the performance (in terms of loading time) of your site is poor - particularly on phones - and the visitor is going to leave your site, IF the loading takes too long. 3.3.3 The solution Nevertheless - with the help of the picture- &amp; source-element - you can solve the problem of a memory-intensive image that need to be downloaded for a hero-image. In this Youtube-Video of myself, I show &amp; explain the solution I have chosen. To get a very solid foundation about the topic: https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images To get a very good example of applying this foundation in practice: https://formidable.com/blog/2019/responsive-images/ A second good example: https://www.smashingmagazine.com/2014/05/responsive-images-done-right-guide-picture-srcset/ 3.3.4 Useful things to know about the Topic When you use the &lt;picture&gt;-element in combination with the &lt;source&gt;-element, it is required that you use a &lt;img&gt;-Tag at the end. Most of the websites - and even the ‚Äúofficial‚Äù source - however, don‚Äôt tell you how this &lt;img&gt; work exactly (but I will, because this little bit of keyknowledge will make you understand, why the ‚Äúperformance‚Äù-score in the light-house is improved after you use the &lt;picture&gt;- &amp; &lt;source&gt;-elements): Important: The &lt;picture&gt;-element itself is invisible, a bit like a magical span. Its source-elements are just there for the browser to draw alternate versions of the image from. Once a source URL is chosen, that URL is fed to the &lt;img&gt;-Element. Additionally, this means that any styles that you want to apply to your rendered image (like, say, max-width: 100%) need to be applied to the &lt;img&gt;-element, not to the &lt;picture&gt;-element. 3.3.5 Cache When using a website, the images oftentimes stay relatively ‚Äústatic‚Äù, that is they - oftentimes - do not change over time. This fact - that the image-content does almost never change over time - can be exploited in order to dimish loading-time significantly with the help of a cache-strategy. 3.3.5.1 The Problem By storing the images on our website‚Äôs server (VTX), the user‚Äôs browser will have to always make requests. Because I have many images, we have a lot of image-requests per page that the user renders on his phone. Hence, the loading time takes long. 3.3.5.2 The theoretical Solution It would be much more efficient - from a performance // loading perspective - if the user had those images already stored in their computer‚Äôs internal (cache) memory. This is where CDNs come into play: those are servers that are distributed all across the globe and that: Visit our website. Then cache // store the images on their server, which is close to the user, from a geographical standpoint. When a user visit our website, the requests for images will be forwarded to the (geographically, much more close the user) CDNs that will already have downloaded the images of our site. This results in a much faster loading-time of our website and an increase in the user‚Äôs experience. 3.3.5.3 The practical Solution In order to use a CDN, I recommend this website as a tool to implement a caching-strategy: https://imagekit.io/ 3.3.6 Lazy-Loading 3.3.6.1 The Problem When you code an HTML-page and you include a bunch of images, you will have to tell the browser, on which path the images can be loaded via the src-atribute of the &lt;img&gt;-tag. However - IF you have many &lt;img src=....&gt;-tags on your site - the browser will automatically load them all at once. And because loading image-entities is one of the most slow process when it comes to make everything visible on the user‚Äôs browser, having lot‚Äôs of images can take a long time to load. More specifically, IF a user directly follows a link to another page on our site, having downloaded all the pages is very inefficient, since the website-visitor will not have seen those images that are at the bottom of the site. 3.3.6.2 The theoretical Solution With JavaScript, we can change the behavior of how load &lt;img src=\"...\"&gt;-tags. In lazy-loading, we can tell the browser - with the help of some JavaScript code - that it only needs to load the images, that are visible in the user‚Äôs viewport // browser-window (= visible portion of the screen). This way, all the images that are on the bottom of our pages, will NEVER be loaded, if the user clicks on a link at the TOP of our page. 3.3.6.3 The practical Solution Use the code - which is written in vanilla JavaScript - from this Fireship Youtube-Video to make Lazy-Loading possible. 3.4 How Front-End &amp; Backend work together Very good example &amp; explanations: https://dev.to/gbudjeakp/how-to-connect-your-client-side-to-your-server-side-using-node-and-express-2i71 3.5 How to build and think about an Application Very good example (read the section ‚ÄúApp Structure‚Äù): https://dev.to/gbudjeakp/how-to-make-applications-from-scratch-without-tutorials-for-beginners-26bg "],["css.html", "Chapter 4 CSS 4.1 CSS Operatoren 4.2 Responsive-Design: use Media-Queries 4.3 Padding-Abk√ºrzung 4.4 Necessary CSS in all Projects 4.5 CSS-Grid Layout-Modell 4.6 Flexbox- &amp; CSS-Grid Layout kombiniert 4.7 Adding Box-Shadows 4.8 Optional Line-Break 4.9 Relative Font-Size 4.10 Advanced Positioning 4.11 Color-Gradients for Text 4.12 Hover-Effekte 4.13 CSS Wave Code-Generator 4.14 Sonstiges", " Chapter 4 CSS 4.1 CSS Operatoren Bei CSS gibt es eine Vielzahl an sogenannten Operatoren, die verwendet werden, um die jeweiligen HTML-Elemente zu selektionieren. Ich habe hier eine Liste mit den wichtigsten CSS-Operatoren erstellt: *: This is the ‚ÄúEverything‚Äù-Selector. .main-container &gt; h2: Selects all the &lt;h2&gt;-Tags that are a DIRECT Child of the class ‚Äò.main-container‚Äô. div.main-container.green: Select all the &lt;div&gt;-Tags, that have the class ‚Äò.main-container‚Äô AND also the ‚Äò.green‚Äô class. .main-container, .red: Notice the comma when I wrote the two classes! This means that we are going to select all HTML-Elements that have the class ‚Äò.main-container‚Äô OR the class ‚Äò.red‚Äô. .main-container .blue: Select all HTML-elements with the class ‚Äò.main-container‚Äô and - WITHIN those HTML-Element with the ‚Äò.main-container‚Äô-class - it selects all the HTML-Elements that have - additionally - the class ‚Äò.blue‚Äô. If both of these conditions are NOT simulatenously met, then it will NOT apply the blue-background color!!! Note that WITHIN means not necessarily that the nested HTML-Element should be a direct child of the ‚Äò.main-container‚Äô element! [id^=drop]: Selektiert alle Elemente mit der ID, welche mit ‚Äúdrop‚Äù beginnt, also beispielsweise: ‚Äòdrop‚Äô, ‚Äòdrop-1‚Äô ‚Äòdrop-2‚Äô etc‚Ä¶ Man kann sich diesen CSS-Selektor als eine Art Regular-Expression vorstellen. .toggle + a: Selects the first &lt;a&gt;-element that is placed immediately after each element that has the .toggle-class. 4.2 Responsive-Design: use Media-Queries Wenn du eine Webseite kreierst, dann musst du zuallerst sicherstellen, dass die Webseite sowohl f√ºr Smartphones, aber auch f√ºr Tablets und Desktops super aussieht. Dies wird mittels sogenannten Media-Queries bewerktstelligt. Im Folgenden habe ich dir diejenigen Mediaqueries eingeblendet, die √∂fters vorkommen: /* --- Extra-Small devices (phones, 400px and down) --- */ @media only screen and (max-width: 400px) {...} /* --- Small devices (phones, 600px and down) --- */ @media only screen and (min-width: 600px) {...} /* Pretty small devices (portrait tablets and large phones, 600px and up) */ @media only screen and (min-width: 600px) {...} /* Medium devices (landscape tablets, 768px and up) */ @media only screen and (min-width: 768px) {...} /* Large devices (laptops/desktops, 992px and up) */ @media only screen and (min-width: 992px) {...} /* Extra large devices (large laptops and desktops, 1200px and up) */ @media only screen and (min-width: 1200px) {...} Wenn du auf Screen-Gr√∂ssen zwischen zwei bestimmten Werten abzielst, dann kann man dies auch tun: @media only screen and (min-width: 480px) and (max-width: 989px) { } 4.2.1 Good rule-of-thumb for image-grid In this example, we have a layout that has: - 4 columns on screens larger than 768px, - 2 columns on screens that have a size between 376px-786px, and - 1 column on screens that are smaller than (or equal to) 375px. Quelle: https://formidable.com/blog/2019/responsive-images/ 4.3 Padding-Abk√ºrzung Es gibt bei CSS diverse Abk√ºrzungen, insbesondere wirst du vor allem diejenige margin und padding sehr oft begenenen: 4.3.1 Fall 1: Margin / Padding has 4 Values div { padding: 25px 50px 75px 100px; } Die Merkregel ist diejenige: es dreht sich im Uhrzeigersinn. padding: 25px 50px 75px 100px; top padding is 25px right padding is 50px bottom padding is 75px left padding is 100px 4.3.2 Fall 2: Margin / Padding has 3 Values div { padding: 25px 50px 75px; } padding: 25px 50px 75px; top padding is 25px right and left paddings are 50px bottom padding is 75px 4.3.3 Fall 3: Margin / Padding has 2 Values div { padding: 25px 50px; } padding: 25px 50px; top and bottom paddings are 25px right and left paddings are 50px 4.3.4 Fall 4: Margin / Padding has 1 Value div { padding: 25px; } padding: 25px; all four paddings are 25px 4.4 Necessary CSS in all Projects 4.4.1 Import Font-Styles via Google-Fonts API In order to use different fonts, you will use Google Fonts, on which literally almost all Design-Platform use. The most simplest AND memory-efficient way to do this, is to import only the specific styles that you need. For this, simply paste in the following code into your .css-stylesheet: @import url(&#39;https://fonts.googleapis.com/css2?family=Montserrat&amp;display=swap&#39;); Note that - in the above example - I used the Montserrat-Font and its specific URL. If you need another font‚Äôs URL, you simply need to go to the Google-Fonts Website, search for a font with the search-bar and - finally - tap on the + select this style-string. This will trigger a side-navbar, where you have the option of an @import-button ‚Äì&gt; click it and copy the URL without the &lt;style&gt;-Tags. Now, you can simply paste it into your .css-stylesheet and then use the font-family: Montserrat (or whatever font...) on the elements you want to apply the font to. =) Best Practice: Always import all the styles on the top of your .css-stylesheet! 4.4.2 Box-Sizing: Border-Box Property Wenn wir beginnen unsere Webseite zu stylen, dann werden wir diese Property als aller erstes Element einf√ºgen und zwar so: * { boxsizing: border-box; } Wobei * dabei - Wort w√∂rtlich √ºbersetzt - blo√ü ‚Äúalles‚Äù heisst. Weshalb brauchen wir border-box als Property? Angenommen, ich habe folgendes &lt;div&gt; gestylt: div { width: 300px; padding: 25px; } Here, the &lt;div&gt;-element is given a width of 300px. However, the actual width of the &lt;div&gt;-element will be 350px (300px + 25px of left padding + 25px of right padding). To keep the width at 300px, no matter the amount of padding, you can use the box-sizing property. This causes the element to maintain its actual width; if you increase the padding, the available content space will decrease. Beispiel zur Illustration: https://www.w3schools.com/css/tryit.asp?filename=trycss_padding_width2 4.4.3 CSS for Images In order to have images that behave ‚Äúnormally‚Äù on the website, we will need to implement the following for ALL images: img { width: 100%; } Weshalb brauchen wir das? This will make the image to take 100% of the width of the parent-element, which - oftentimes - are &lt;div&gt;‚Äôs. 4.4.4 Center a &lt;div&gt; AND make it Responsive Moderne Webseiten heutzutage verwenden &lt;section&gt;, um die einzelnen Bereiche einer Webseite nach ‚ÄúThema‚Äù zu ordnen. Beispielsweise besteht eine Webseite aus einer Navigation, einem Hauptteil und einem Footer (= 3 Sections). In der Code-Struktur werden diese HTML &lt;section&gt;-Elemente h√§ufig als ‚ÄúMain Container‚Äù // ‚ÄúWrapper‚Äù verwendet, die viele weitere HTML-Elemente enthalten (‚Äúnested HTML‚Äù). Es ist zum Standard geworden, dass man bei diesen √§usseren Wrappern jeweils das (responsive) padding &amp; margin festlegt. Ausserdem werden diese jeweils zentriert, damit es sch√∂ner aussieht: .main-container { width: 90vw; /* For Responsive design, this is the &quot;state-of-the-art&quot; thing to do for our containers // wrappers. */ margin: 0 auto; /* Automatic centering of a &lt;div&gt;. */ padding: 40px 0; /* Bringt Luft in das Ganze, indem man - dem obere &amp; untere Rand - 40px mehr &quot;white space&quot; l√§sst.*/ } Problem von margin: 0 auto? The auto-margin-property only works for &lt;block&gt;-Elements. If you have a &lt;inline&gt;-Element, then you cannot apply width &amp; height, as well as the top- &amp; bottom-property! Solution: If you have an &lt;inline&gt;-Element, you can simply display: block! :) 4.4.5 Use Google-Fonts In your Projects, you will oftentimes want to use a beautiful font rather than the default ones. Step 1: Go to the Google-Fonts Website Step 2: Search for a font, for example Raleway. Step 3: Follow the steps on the image below These are the remaining steps on this Image. You need to insert the link into your CSS file via @import, like in this example: https://www.youtube.com/watch?v=Sv_NAxi_jNs&amp;t=8m6s) 4.4.6 Write something on top of an Image In order to write some text over an image, you can use the a trick that uses relative-position on a parent HTML-element and absolute-position on a child HTML-element. In order to use this, make sure to have the following HTML-structure: &lt;div class=&quot;container&quot;&gt; &lt;img src&quot;./images/Your_image.jpg&quot; alt=&quot;This is an example&quot;/&gt; &lt;div class=&quot;text-container&quot;&gt; &lt;h1&gt;THE WORLDO&lt;/h1&gt; &lt;p&gt;Lorem Ipsum Dolor ...&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; Additionally, the CSS-structure looks like this: .container { position: relative; /*This is important, since it will allow to ABSOULTELY-position our CHILD-element (= hier: text-container) RELATIVELY to this parent-container.*/ } img { /* In order to display the image properly, we need this styling... */ width: 100%; height: auto } .text-container { position: absolute; /*This is very important, since it will allow to ABSOULTELY-position our CHILD-element (= hier: text-container) RELATIVELY to this parent-container.*/ left: 50%; /* This is part of a &quot;hacker-trick&quot; described on the next CSS-Line...*/ transform: translate(-50%, -50%); /* This is a &quot;hacker-trick&quot; to always center our text in the middle of a screen (egal ob phone, tablet or desktop), when we absolutely porition this child-element.*/ text-align: center; /*The rest here is additional styling...*/ padding: 15px; border-radius: 10px; background-color: rgba(204,204,204, 0.65); } 4.5 CSS-Grid Layout-Modell CSS Grid ist eines (von insgesamt zwei) der wichtigsten Modelle, um eine Webseite von Grund auf zu kreieren. 4.5.1 Grundstruktur f√ºr das HTML Um CSS Grid verwenden zu k√∂nnen, m√ºssen die HTML-Ekemente folgende Grundstruktur aufweisen (ansonsten funktioniert das CSS Grid gar nicht!): &lt;div class=&quot;grid-container&quot;&gt; &lt;div class=&quot;grid-item&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;grid-item&quot;&gt;2&lt;/div&gt; &lt;div class=&quot;grid-item&quot;&gt;3&lt;/div&gt; &lt;div class=&quot;grid-item&quot;&gt;4&lt;/div&gt; &lt;div class=&quot;grid-item&quot;&gt;5&lt;/div&gt; &lt;div class=&quot;grid-item&quot;&gt;6&lt;/div&gt; &lt;div class=&quot;grid-item&quot;&gt;7&lt;/div&gt; &lt;div class=&quot;grid-item&quot;&gt;8&lt;/div&gt; &lt;div class=&quot;grid-item&quot;&gt;9&lt;/div&gt; &lt;/div&gt; 4.5.2 CSS for Grid-Container Es gibt eine Reihe von CSS Grid Properties, aber hier sind die 3 wichtigsten, um bereits ein sehr sch√∂nes UND responsives Design zu erhalten: .posts-main-container{ display: grid; /*Aktiviert das CSS-Grid Modell f√ºr das HTML. */ grid-template-columns: repeat(3, 1fr); /* F√ºr ein 3-Spaltiges Grid-Layout, welches - aufgrun des &quot;1fr&quot; - responsive ist. */ grid-gap: 40px; } 4.5.3 Responsiveness Damit ein CSS-Grid ‚Äúresponsive‚Äù wird, musst du mit Media-Queries arbeiten. Dabei definierst du zun√§chst, wie viele Spalten das Grid-System haben soll, wenn es auf einem sehr grossen Screen (= Desktop) aussehen soll und - anschliessend mittels Media-Queries - wie viele Spalten es auf dem Tablet &amp; Phone haben soll. Dabei ver√§nderst du eigentlich nur die CSS-Property grid-template-columns, wie das folgende Beispiel zeigt, bei dem ich jeweils f√ºr 3 Bildschirme die Anzahl an Spalten verringere (3 Spalten auf Desktop, dann 2 Spalten auf Ipad, dann 1 Spalte auf Phones): .grid-container { display: grid; grid-template-columns: repeat(3, 1fr); /* 3 Spalten f√ºr Desktops */ grid-gap: 40px; } @media screen and (max-width: 980px){ .einzel-vorstellung { grid-template-columns: repeat(2, 1fr); /* Nur noch 2 Spalten f√ºr Tablets */ } } @media screen and (max-width: 540px){ .einzel-vorstellung { grid-template-columns: repeat(1, 1fr); /* Kleine telefone haben bloss noch 1 Spalte */ } } Beispiel: Schaue dir auch noch mein Youtube-Video zum Thema an. Alternative ohne @media: Dieses Youtube-Video von WebDev Simplified (ab 2:50-3:30) zeigt eine alternative Methode anhand von der auto-fill-property &amp; minmax()-Funktion. 4.5.3.1 Asymmetric 2-Column-Grid Angenommen, ich m√∂chte ein 2-Column-Grid Layout, aber die 1. Spalte sollte nicht 50% // die H√§lfte des Screens an Platz einnehmen, sondern ‚Äúnur‚Äù 30%.: .grid-container { grid-template-columns: 30% 1fr; /* Hier habe ich ein Grid erstellt mit 2 Spalten, wobei die 1. Spalte nur 1/3 des viewport-widths ausmacht, w√§hrend die 2. Spalte den &quot;Rest&quot; (= 1fr) ausmacht, was grunds√§tzlich 2/3 entspricht. */ } Here is another example with 3 columns of unequal width: Grid-Layout with unequal Columns 4.5.4 justify-content VS. justify-item VS. justify-self Hier ist vor allem zu beachten, dass die justify-content- &amp; justify-item-properties auf den grid-container angewendet werden, w√§hrend - im Kontrast dazu - die justify-self-property auf den verschiedenen grid-items angewendet werden kann! justify-content allows you to position the grid within it‚Äôs grid container. This is why the justify-content property will have no effect if the grid-container is the same size as the grid. (Which is always the case if you use fr units). This is also why it can have the values: space-around, space-between and space-evenly (In addition to start, end, centre and stretch), which will break up the grid and place the grid items within the grid container. This is a property of the grid-container. justify-items allows you to set a default position for content placed in the grid‚Äôs grid items (A grid item being a box in the grid, as defined in Michael_B‚Äôs post). This is a property of the grid-container. justify-self allows you to override the default position of content in an individual cell. This will override the position set by justify-items. Hence, if you use justify-self on all children of the container, setting justify-items on the grid container will have no effect. This is a property of the content inside a grid-item. As you might expect, all of this also applies to the align-* properties! 4.5.5 N√ºtzliche Quellen justify-content VS. justify-item VS. justify-self: https://stackoverflow.com/questions/48535585/what-is-difference-between-justify-self-justify-items-and-justify-content-in-cs Ultimate Grid-Tutorial (from CSS-Tricks): https://css-tricks.com/snippets/css/complete-guide-grid/ Practical Examples from Firebase‚Äôs Youtube-Channel: https://www.youtube.com/watch?v=705XCEruZFs 4.6 Flexbox- &amp; CSS-Grid Layout kombiniert Hier eine Illustration meiner Erkenntnisse: https://youtu.be/yoTrOm8AjdM 4.7 Adding Box-Shadows When building Produkt-Karten, you will probably want to make the cards more 3D-like. You can do this by simply addding the following CSS-code: box-shadow: rgb(0 0 0 / 64%) 0px 8px 22px -12px; 4.8 Optional Line-Break Manchmal gibt es W√∂rter, die sehr lang sind, zum Beispiel ‚ÄúKlangoptimierungszubeh√∂r‚Äù. Das Problem, welches dabei passieren k√∂nnte, w√§re, dass kleine Smartphones solche W√∂rter nicht auf einer einzigen Linie abbilden k√∂nnen. Es gibt jedoch das &amp;shy;-HTML-K√ºrzel, welches dieses Problem behebt: &lt;div id=&quot;example-paragraphs&quot;&gt; &lt;p&gt;Fernstra√üenbauprivatfinanzierungsgesetz&lt;/p&gt; &lt;p&gt;Fernstra√üen&amp;shy;bau&amp;shy;privat&amp;shy;finanzierungs&amp;shy;gesetz&lt;/p&gt; &lt;/div&gt; Erkl√§rung: The &amp;shy; HTML element represents a word break opportunity‚Äîa position within text where the browser may optionally break a line, though its line-breaking rules would not otherwise create a break at that location. 4.9 Relative Font-Size Wenn man eine Webeite f√ºr den Screen, f√ºr das Tablet UND f√ºr das Telefon gleichzeitig designt, dann spielen die relative font-size eine Rolle. Hierf√ºr bietet CSS eine Reihe von verschiedenen units an: All the different font-size values that you can choose from in CSS 4.10 Advanced Positioning transform: translate(x,y): Dies erlaubt, ein Objekt zu bewegen entlang der x- und y-Achse des PCs. Hier ein Beispiel, wie man translate(2,1) anwendet zur Illustration 4.11 Color-Gradients for Text For styling reasons, it can be very nice to make your website stand out by using colors for your fonts that gradially become darker / brighter. Here is the code that you need to implement into your CSS (note: here, I give you the code that can be implemented into the html directly): style=&quot; background: -webkit-linear-gradient(#ee9c38, #b3680e); -webkit-background-clip: text; -webkit-text-fill-color: transparent;&quot; 4.11.1 When to use? This method should be used at the very end, when you are styling your website and the whole code is already implemented. 4.11.2 Quellen Webseite mit Tools: https://cssgradient.io/color-shades/ Google extension that is nice to have when creating gradients: https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp/related?hl=de 4.12 Hover-Effekte 4.12.1 Weisse Hyper-Links F√ºr eine Navigation mit weisser Farbe (= #fff) empfiehlt sich folgender Code f√ºr das Hovern mit der Maus, √ºber den Link: .link:hover{ color: #c7c7c7; /* Das ist ein leicht dunkleres Weiss, beinahe grau, ohne, dass es st√∂rend wirkt. */ } 4.13 CSS Wave Code-Generator Usually, you have different sections on your website and you separate them by giving each section a different background-color. With this website, we have a way to get a section that creates different shapes for the background, in order for you to get very creative. 4.14 Sonstiges 100 vh = Full screen of the Browser-Fenster. Apple zum Beispiel verwendet: 35vh und 55vh. "],["javascript.html", "Chapter 5 JavaScript 5.1 Konzept 5.2 Definitionen 5.3 Important Questions to know about 5.4 Important JavaScript-Methods 5.5 Useful Codes", " Chapter 5 JavaScript JavaScript is the last of the 3 languages that you need to know in order to create websites. In my opinion, JavaScript is not even really necessary in order to create a very beautiful site nowadays. However, if you want to add features, such as lazy-loading for example, then you will need to know some basic JavaScript and - very importantly - how it interacts with html in order to be able to have fun with the language =) 5.1 Konzept JavaScript ist eine Programmier-Sprache, wie jede andere auch. Sie ist √§hnlich, wie Python, wird jedoch insbesondere bei Webseiten ben√∂tigt. Grunds√§tzlich ist die Beherrschung von JavaScript - alleine - nicht besonders wertvoll, denn JavaScript kann ohne das DOM - also das Document Object Model - √ºberhaupt nicht mit dem HTML-Code interagieren. Das DOM agiert als wichtige Schnittstelle // API (= Application Programming INterface // aka eine Art Kellner, der zwischen der K√ºche &amp; dem Kunden am Tisch interagiert), mit welchem es m√∂glich wird, das ‚ÄúVerhalten‚Äù (zum Beispiel beim Klick eines Users auf einen Knopf) einer Webseite zu definieren (mittels JavaScript Code) und z.B. eine E-Mail an eine Adresse zu versenden. Hier eine Illustration, wie das DOM als API zwischen JavaScript &amp; HTML interagiert: DOM-API, der als Schnittstelle zwischen HTML &amp; JavaScript agiert 5.2 Definitionen Callback Function: A 25 seconds Video that explains this concept. In my words: This is a function, which will be called // executed by another function - onClick() is an example of such a function, which is an Event that occurs, when a User clicks on a button - some time in the future // right after you executed the first function (onClick()). It is possible, that this function is called (by the other function) multiple times in the future. Note: Callback Functions - that are activated by Events - are one of the most important concepts of JavaScript! (Normal) Queue: Given that you have a list // array: a ‚Äúnormal queue‚Äù adds new items to the back, picks item from the front of the list. Deffering Images: This means delaying the loading of images that appear below-the-fold (= not on viewport) on the page. 5.3 Important Questions to know about Putting &lt;script&gt;-Tags on the very bottom of the page, just before the ending &lt;/body&gt;-Tag VS. &lt;script&gt;-Tags in the &lt;head&gt;-Bereich, on the very top of the page, when using JavaScript? Fakt: The very special thing about a &lt;script&gt;-Tag, is that - when the browser is reading your HTML-Document - **it will stop loading everything else, when it arrives and loads a &lt;script&gt;-Tag. Problematische Konsequenz des obigen Faktes: Thus - if you have a huge and very complicated &lt;script&gt;-Tag that takes a long time to run - the content may stop loading and the user will wait, which is NEVER a good idea. 2 possible Solutions to the Problem above: Put the &lt;script&gt;-Tag at the very bottom of your page, since this will cause the browser to always read the JavaScript, when everything else is loaded. If you want, you can still put your &lt;script&gt; into the &lt;head&gt;-section at the very top of the page, but the &lt;script&gt;-Tag must contain a async property, like it is shown in this video, 2:47-3:30. This will make sure the script is loaded SIMULTANEOUSLY to the &lt;body&gt;, hence removing the default-behavior of ‚Äústop loading everything else when loading a &lt;script&gt;-Tag‚Äù. However, we - furthermore - will also need to tell JavaScript, that it should only start looking for the HTML-elements to interact with, when the entire &lt;body&gt; has already been loaded. This can be achieved by checking the readyState. This video, 16:06-18:22 shows how to do it. 5.4 Important JavaScript-Methods .html() = This allows you to change the content of an HTML-element. For example, if you want to change something you have written in a Paragraph. .position() = This allows you to change the position of an HTML-element on the page. .value() = This allows you to access the value of an HTML-element. For example, if you have a slider (= that goes from a maximum to a minimum value), you can retrieve its value by using this .value()-method). 5.5 Useful Codes 5.5.1 Scroll back up to the Top of the Page via a Link This is useful when a user scrolled down to the very bottom of the page and would need to scroll up a very long time. With this code, you help the user getting much faster to the top of the page via a &lt;a&gt;-Tag :) &lt;script type=&quot;text/javascript&quot;&gt; function goUp() { window.scrollTo({ top: 0, behavior: &#39;smooth&#39; }); } &lt;/script&gt; &lt;!-- This code needs to be placed just above the link, otherwise it does NOT work (because we need to initialize the function &#39;goUp()&#39; first)! --&gt; &lt;div class=&quot;arrow&quot;&gt;&lt;a href=&quot;javascript:goUp()&quot; class=&quot;scrollTo&quot;&gt;&amp;#709;&lt;/a&gt;&lt;/div&gt; Alternative via &lt;button&gt;: On the html-page, the HTML-Code for the &lt;button&gt; looks like this: &lt;button id=&quot;goUp&quot;&gt;&amp;#709;&lt;/button&gt; &lt;!-- Notice how the button has an ID and NOT a class!!! This is because, when we write the JS-Code, we cannot use an event-listener on the method &quot;getElementsByClassName()&quot;, since this method returns an array and NOT a single value (see the following link for more infos: https://stackoverflow.com/questions/32151704/addeventlistener-is-not-a-function) --&gt; For the CSS, we need to add the followings styles on the css-stylesheet: #goUp{ /* This is a button, that&#39;s why we have alot of default-values to overwrite... */ margin: 0; appearance: none; align-items: flex-end; margin-left: 87%; background-color: transparent; color: #F00; border: none; transform: rotate(180deg); font-size: 3em; cursor: pointer; } Finally, for the Javascript-Part, we need to add the following code into the .js-file: document.getElementById(&quot;goUp&quot;).addEventListener(&quot;click&quot;, function(){ window.scrollTo({ top: 0, behavior: &#39;smooth&#39; }); }); "],["images-for-websites.html", "Chapter 6 Images for Websites 6.1 CSS f√ºr Bilder 6.2 Kompression 6.3 Das neue WebP-Format 6.4 Hero-Image 6.5 Das LCP-Problem bei SEO-Smartphone-Optimierung 6.6 Responsive Background Images as Hero-Image 6.7 Caching when dealing with Phones 6.8 SVG-Bilder", " Chapter 6 Images for Websites Wenn du Bilder f√ºr eine Webseite verwendest, dann sollten diverse Dinge beachtet werden. 6.1 CSS f√ºr Bilder 6.1.1 Allgemeines Set-Up Damit sich die Bilder im Browser korrekt verhalten, brauchst du folgende CSS-Befehle auf dem &lt;img&gt;-Tag: img { /* For a correct image-behavior, we need these two properties. */ width: 100%; height: auto; } 6.1.2 Resize ALL Images the Same AND Maintain Aspect-Ratios Angenommen, du verwendest verschieden grosse Bilder, m√∂chtest diese jedoch alle gleich gross machen und dabei die : Das Problem: Nicht gleich grosse Bilder Der Trick hier ist, dass - wenn du den Bildern nun eine Custom-CSS-Klasse mit der height des kleinsten Bilds gibst (hier der CH-Precision) - sich dann die Aspect-Ratio aller Bilder automatisch anpasst: .product-item-image { height: 250px; /*VERY IMPORTANT for Aspect-Ratios of &lt;img&gt;-Tag: If you set a height for your image, the browser will automatically adapt the width of the image, in order to keep the correct aspect-ratio. Set this according to how you like it!*/ object-fit: cover; /* This specifies how an object (image or video) should fit inside its box (= parent-element). Basically, it &quot;crops&quot; the image in order to fit it to any possible device. When you use Object-fit: &quot;cover&quot;, it overflows the (parent)-box // &lt;div&gt;-element but maintains its aspect-ratio (= Seitenverh√§ltnis), which is a very important property to have for images! */ width: 100%; } Der obige Code wird von 98% der Browser unterst√ºtzt. Das Resultat sieht dann so aus: Die L√∂sung: Kreiere eine neue CSS-Klasse und definiere dann entweder eine neue height oder width. Dadurch passt sich die width respektive die height automatisch an. Nachteil dieser Methode: Es Cropt die Bilder, die sich anpassen m√ºssen! L√∂sung, um dieses Problem zu umgehen: Verwende mein Video-Tutorial, um ein Bild f√ºr jegliche Screens zu croppen! Alternative, aber weniger effiziente L√∂sung: Du musst mitels GIMP die Apsect-Ratios gleich machen. Dabei wirst du allerdings auch Croppen m√ºssen‚Ä¶ 6.1.3 Strange small white-space below Image used as a Produkt-Karte The issue I had was exactly described in this Stack-Overflow-Post: https://stackoverflow.com/questions/5804256/image-inside-div-has-extra-space-below-the-image/5804278 The solution to this is to simply display the image in the Produkt-Karte with a block-value: .product-item-image { display: block; /* Debuging: I had a strange white-space between the image and my Card-Description. This issue can be resolved when using the property &quot;block&quot; on the image. - Example of the exact issue I had, is on Stack-Overflow: https://stackoverflow.com/questions/5804256/image-inside-div-has-extra-space-below-the-image/5804278 */ } 6.2 Kompression Bilder sollten niemals in ihrer Original-Gr√∂sse auf das Web geladen werden, weil diese oftmals viel zu gross sind. 6.2.1 Das Problem? Denke beispielsweise daran, wenn du mit deinem Smartphone nur eine 3G- oder 4G-Internetverbindung hast, dann werden die Ladezeiten langsamer. Wenn du nun nur riesige Bilder von mehreren MB an Gr√∂sse hast, dann wird die Seite ewigs laden und die Nutzer werden diese Seite nach kurzer Zeit verlassen, weil es sie aufregt, mit so langen Ladezeiten konfrontiert zu sein. 6.2.2 Die L√∂sung? Die beste Technik um mehrere Bilder gleichzeitig zu komprimieren // resizen, dann empfehle ich dir dieses Youtube-Video von mir. Dort zeige ich dir, wie ich sogenanntes Batch Processing betreibe. Die verschiedenen Sizes // Image-Qualit√§ten, die du dem Browser zur Verf√ºgung stellen solltest, sind: 375px, 600px, 786px, 1080px, 1600px, &quot;Original-Bild&quot; Wenn du nur 1 Bild sehr genau bearbeiten // komprimieren willst, dann verwende BeFunky.com. Alternative, die auch andere - modernere(!) - Formate &amp; Kompressionen erreichen kann, ist die Webapp Squoosh.app. 6.3 Das neue WebP-Format Gem√§ss Google Lighthouse, gibt es nun ein neues Format, welches besser als .jpeg oder .png ist: das WebP-Format. Dieses erlaubt eine noch bessere Kompression der Bilder und kann somit noch schnellere Seitenladezeiten garantieren! Implementation in Webseite? - Folgender HTML-Code sollte implementiert werden: Dieser Code sollte das WebP-Format f√ºr moderne Browser garantieren und ansonsten auf das .jpeg-Format zugreifen, wenn es nicht geht. 6.4 Hero-Image Eines der effektivsten Mitteln, um einen User auf der Webseite zu behalten, sind der Einsatz von Bildern. F√ºr meine Webseiten verwende ich sehr oft aogenannte Hero-Images, damit die User sofort mit sch√∂nen Fotos in den Bann gezogen werden. 6.4.1 Das Problem mit Responive-Webseiten? Wenn du Hero-Images verwendest, dann kann es sein, dass die Bilder f√ºr Tablets &amp; Smartphones falsch ‚Äúge-cropt‚Äù werden. Deshalb ist der Einsatz vom picture-Tag sehr empfehlenswert. 6.4.2 Die L√∂sung mit Responive-Webseiten? Hier w√§re ein Beispiel eines HTML-Codes: &lt;div class=&quot;grande-image&quot;&gt; &lt;div class=&quot;grande-image-item&quot;&gt; &lt;picture&gt; &lt;source media=&quot;(max-width: 480px)&quot; srcset=&quot;bilder/produkte/abschlusswiderstand/abschlusswiderstand-75-ohm-innenleben.jpg&quot; /&gt; &lt;source media=&quot;(max-width: 640px)&quot; srcset=&quot;bilder/produkte/abschlusswiderstand/abschlusswiderstand-75-ohm-innenleben.jpg&quot; /&gt; &lt;source media=&quot;(max-width: 1024px)&quot; srcset=&quot;bilder/produkte/abschlusswiderstand/abschlusswiderstand-75-ohm.jpg&quot; /&gt; &lt;img src=&quot;bilder/produkte/abschlusswiderstand/abschlusswiderstand-75-ohm.jpg&quot; width=&quot;1800&quot; height=&quot;824&quot; alt=&quot;OptimizeAudio Abschlusswiderstand 75 Ohm&quot; /&gt; &lt;!--421 kB--&gt; &lt;/picture&gt; &lt;img src=&quot;bilder/produkte/abschlusswiderstand/abschlusswiderstand-75-ohm.jpg&quot; width=&quot;2000&quot; height=&quot;1333&quot; alt=&quot;OptimizeAudio Abschlusswiderstand 75 Ohm&quot; /&gt; &lt;div class=&quot;centered&quot;&gt; &lt;h2 class=&quot;hero-title&quot;&gt;Abschlusswiderstand 75 oder 110 Ohm&lt;/h1&gt; &lt;h3 class=&quot;hero-sub-title&quot;&gt;Vermeidet das Eindringen von elektromagnetischen hochfrequenten Feldern. &lt;/h2&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; ACHTUNG: Reihenfolge spielt hier eine Rolle bei den &lt;source&gt;-Elementen ‚Äì&gt; Liste zuerst die Elemente auf, mit dem kleinsten Bildschirm, dann 2. kleinster Bildschirm etc‚Ä¶ **Ein Beispiel, wie mit dem sizes-Attribut umzugehen ist: https://css-tricks.com/sometimes-sizes-is-quite-important/ 6.5 Das LCP-Problem bei SEO-Smartphone-Optimierung 6.5.1 Das Problem? Da meine Webseiten h√§ufig auf ‚ÄúHero‚Äù-Images (= grosse, Full-Screen Bilder) basieren, um die Neugier des Besuchers sofort zu packen, habe ich jedoch ein LCP-Problem (= ‚Äúlargest contentful page‚Äù): Google meint, dass die Ladezeit f√ºr Smartphone-User hier zu lange geht. Es gibt hier viele ‚Äúpro‚Äù-Methoden, um das Problem zu l√∂sen (insbesondere mit sog. Caching-Strategien), allerdings sind diese sehr kompliziert zu implementieren. Hier das Problem illustriert: man sieht, dass bei der ‚ÄúPerformance‚Äù die Werte gering sind. Dies ist der hohen Ladezeit des Hero-Images zuzuschreiben‚Ä¶ 6.5.2 Die L√∂sung? Ich habe eine provisorische L√∂sung gefunden, die sich extrem schnell implementieren l√§sst und sofort Resultate bringt. Folgender Code sollte hierbei verwendet werden: &lt;div class=&quot;showcase-wrapper&quot;&gt; &lt;div class=&quot;showcase-content&quot;&gt; &lt;div class=&quot;showcase&quot; style=&quot;background-image: url(bilder/monatlicher-klang-workshop/optimize-audio-netzleiste-6x.jpg); background-size: cover; background-position: center;&quot;&gt; &lt;img src=&quot;bilder/monatlicher-klang-workshop/optimize-audio-netzleiste-6x.jpg&quot; alt=&quot;&quot; style=&quot;display: none;&quot;&gt; &lt;!-- This is the hack! --&gt; &lt;h1&gt;Monatlicher &lt;br&gt; Workshop&lt;/h1&gt; &lt;button type=&quot;button&quot;&gt;Tipps f√ºr eine bessere High-End Anlage.&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Hierbei verwende ich ein Background-Image via CSS UND gleichzeitig ein &lt;img-Tag mit display: none Attribut √ºr den Hack. Dadurch wird n√§mlich das Bild mit h√∂chster Priorit√§t geladen - AKA preloading the image - ist jedoch wegen display: none unsichtbar. -Achtung: Damit der Trick funktioniert, muss der Pfad des background-image == scr des &lt;img&gt;-Tags entsprechen!!! Resultat, wenn du den Hack richtig implementierst. Schau, wie nun der Score der Performance von ‚Äú81‚Äù auf ‚Äú94‚Äù gestiegen ist! xD 6.6 Responsive Background Images as Hero-Image 6.6.1 Das Problem? Bisher konnte ich nur unterschiedliche Bilder f√ºr ein Hero-Image, indem ich &lt;picture&gt; in Kombination mit &lt;img&gt;-(Fallback-)Tag &amp; &lt;source&gt;-(Media-Queries)-Tag verwendet habe. Ich habe jedoch eine neue L√∂sung gefunden, um DASSELBE Resultat zu erreichen, allerdings mit der CSS-Propert background-image: url(...), damit die Background-Images RESPONSIVE werden (sehr nice!). Das Beste daran? Es funktioniert sogar mit IE Browsern! 6.6.2 Die L√∂sung? Obwohl Media-Queries nicht als Inline-CSS im HTML-Dokument verwendet werden k√∂nnen (das war urspr√ºnglich meine L√∂sung, um Background-Images responsive zu machen), kann es nun mittels einer sogenannten ‚ÄúCSS-Variablen‚Äù erreicht werden (= var()). Lese die Antwort mit den meisten upvotes in diesem Stack-Overflow thread, damit du verstehen kannst, wie ich das geschafft habe. 6.7 Caching when dealing with Phones Smartphones werden zunehmend der Standard der Webseiten-Branche. In 2020 hat Google sogar bei Webseiten eine sehr wichtige neue Richtlinie eingef√ºhrt, welche mit dem Slogan Smartphones first betitelt wurde. Somit muss ich nun vor allem die Optimierungs-Kriterien vor allem f√ºr Smartphones ausrichten. Und eine der wichtigsten Tools - wie es scheint - ist die Einrichtung (auf der Server-Seite) der richtigen Caching-Strategie. Hierzu habe ich einen ultimativen Guide gefunden, welcher alles erkl√§rt. Insbesondere die Erkl√§rungen ganz am Anfang helfen sehr f√ºr das allgemeine Verst√§ndnis. Hier ein Beispiel, wie es in der .htaccess-Datei aufzusetzen w√§re, gem√§ss dieser Webseite: Beispiels-Code f√ºr die .htaccess-Datei Auf dem obigen Beispiel gibt es keinen Hinweis darauf, wie ein Expires-Attribut (= Datum, ab welchem der Browser seinen Cash l√∂schen darf) verwendet werden soll: Beispiel mit Expires-Attribut 6.8 SVG-Bilder Diese Art von Bilder ist speziell, denn - egal ob du ein Bild schrumpfst oder erh√∂hst - die Aufl√∂sung bleibt diesselbe! Du kannst sowohl GIMP aber auch Figma verwenden, um SVG-Bilder zu produkzieren. 6.8.1 Implementierung mit Figma Ich empfehle dir die Figma-Implementierung, denn diese ist einfacher zu bedinene, als GIMP und du kannst ausserdem andere Designs verwenden, von anderen Personen! Figma eignet sich insbesondere f√ºr 2 F√§lle, insbesondere f√ºr das erstellen von (komplexen) Logos UND f√ºr die Erstellung von SVGs, welche dann weiterverwendet werden k√∂nnen f√ºr - beispielsweise - Webseiten-Animationen. Zwar kann Figma einem CSS-Code f√ºr den Aufbau eines (App- // Logo-) Prototypen verwenden, allerdings wird nicht mit HTML angegeben und ist nicht responsive! Somit kann Figma als ein Substitut f√ºr Adobe InDesign angesehen werden. Figma-Tutorial: https://www.youtube.com/watch?v=UTHgr6NLeEw&amp;t=3m12s Figma-Webseite: https://www.figma.com/ 6.8.2 Implementierung mit GIMP GIMP-Tutorial: https://praxistipps.chip.de/gimp-vektorgrafik-erstellen_30229 "],["terminal.html", "Chapter 7 Terminal 7.1 Terminal-Commands: 7.2 Terminal Magic-Commands for being faster? 7.3 How to activate &amp; use Python?", " Chapter 7 Terminal The Terminal // Command Line is a place that helps you: to install packages setup your computer setup your virtual environment (npm or venv) setup a git-repo etc‚Ä¶ 7.1 Terminal-Commands: A terminal will be essential for your projects, since you will - oftentimes - install packages or move files around your repositories with it. Here, you will find the most useful things you should know when using the Terminal. 7.1.1 Aktuelle Position // Directory? For Mac: pwd = print working directory For Windows: dir = this is the same command as pwd, but dir is for Windows 7.1.2 Showing the child-directories inside the directory you are currently in? ls = prints all the child-directories (= one layer deeper of the path) from the parent-directory (= current directory you are in with your terminal) you are currently in. 7.1.3 Delete everything you wrote in your Terminal up until now? clear = clears the terminal 7.1.4 Change directory? cd = change directory cd .. = go back one directory. 7.1.5 Creating a new directory? mkdir new-folder-1 new-folder-2 new-folder-3 = This creates 3 new folder within the current (working-) directory you are currently in. 7.1.6 Create a new file? touch index.html app.css == This will create an index.html, as well as a app.css-file within the current (working-) directory you are currently in. 7.1.7 Remove files? rm index.html app.css capture.png = This will delete the index.html-, the app.css and the capture.png-files from the current (working-) directory you are currently in. 7.2 Terminal Magic-Commands for being faster? Trick #1: hit the ‚ÄúTab-Taste‚Äù == will automatically auto-fill the name of the file / directories etc. Example: Type cd Dok + ‚ÄúTab‚Äù-Taste ‚Äì&gt; auto-fill activates ‚Äì&gt; im Terminal steht dann der automatisch ausgef√ºllte Name des Files / Directories, zum Beispiel cd Dokumente bzw. cd Name_Of_Child_Directory Trick #2: How to find a path of a directory that is situated very deeply in your local computer? Example: Type cd + drag-&amp;-drop the folder that is deep in your computer with the file in it. 7.2.1 Syntax im Terminal *-Zeichen == Represents ‚Äúall files‚Äù. 7.2.1.1 Beispiel: Delete all Files in a folder that start with the letter a? To delete all files in a folder that start with the letter a, then you should write: /folder/a* .-Zeichen == use the . character to represent the current folder. ~-Zeichen == represents the ‚Äúhome directory‚Äù. 7.2.1.2 Beispiel: how to return to your home directory? You should use: cd ~ 7.3 How to activate &amp; use Python? Python can be executed on your local computer via a Jupyter Notebook, which can be accessed through an IDE. R, Visual Studio Code or PyCharm are examples of IDEs. Let‚Äôs assume, that we took PyCharm as our IDE. We do the following steps: Use the Terminal within PyCharm. Once you opened the PyCharm-Terminal, go to the directory that will be used for the Jupyter Notebook, by typing something as cd /some_folder_name. Finally, type in jupyter notebook in the Terminal to launch the Jupyter Notebook App. The notebook interface will appear in a new browser window or tab. "],["git.html", "Chapter 8 Git 8.1 W√∂rterbuch", " Chapter 8 Git 8.1 W√∂rterbuch pull request = ‚ÄúTake some changes from a particular branch and bring it into another branch.‚Äù Achtung: es ist eine Request, es wurde noch nichts gemerged! F√ºr das brauch es noch merge als zus√§tzlichen Befehl. fork a repo = ‚ÄúTake someone else‚Äôs repo - because you love it üòä - and put it into your own list of repos, in order to be able to edit it yourself without affectig the original repository of the owner.‚Äù commit = save hash = unique identifier in the history of files. A has is a huge string composed of characters (= Buchstaben) &amp; numbers and is used when using a version-control software, such as Git. git add = Der Befehl git add wird zu vielen verschiedenen Zwecken eingesetzt. Man verwendet ihn, um: neue Dateien zur Version-Control hinzuzuf√ºgen, Dateien f√ºr einen Commit vorzumerken, UND verschiedene andere Dinge ‚Äì beispielsweise einen Konflikt aus einem Merge als aufgel√∂st zu kennzeichnen. Leider wird der Befehl git add oft missverstanden. Viele assoziieren damit, dass damit Dateien zum Projekt hinzugef√ºgt werden. Wie Sie aber gerade gelernt haben, wird der Befehl auch noch f√ºr viele andere Dinge eingesetzt. Wenn Sie den Befehl git add einsetzen, sollten Sie das eher so sehen, dass Sie damit einen bestimmten Inhalt f√ºr den n√§chsten Commit vormerken (= also Punkt (2) ist vor allem relevant in der obigen Liste. How to tell the original owner you want to merge your changes that you made back into their orignal repo and implement them those changes into their original work // repo? Look at the youtube video from Coding Train ab 9:35-11:50 To see how to refer to issues &amp; bugs in your code directly via your commit-command, look at the youtube video ab 6:35-7:40 and to diretly close issues, because you resolved it, look look at the youtube video ab 7:40-8:55. What is a remote? A remote is a duplicate instance of your repository (on your local computer) that lives somewhere else on a remote server (like Github). 8.1.1 First time using Git &amp; Github There are specific Git-commands that you need to know, when you begin to start to work with Git and Gibthun for the first time. Note that all these Git-commands need to be typed within the Terminal on your local computer. git config --list = Sehr wichtig, wenn du Git zum ersten Mal via einem neuen Computer runst! Dieser Befehl zeigt dir, welchen Username &amp; Email du aktuell verwendest (schaue bei user.name &amp; user.email, ob es deine Github Anmelde-Daten sind). Es ist key - insbesondere, wenn du neu mit Git beginnst - dass diese Parameter mit deinen Github Anmelde-Daten √ºbereinstimmen! Ansonsten musst du immer git clone machen und die √§ltere Version in einen ‚Äúalt‚Äù-Ordner tun, was extrem m√ºhsam ist. Wenn du noch keinen user.name hast, dann gebe folgenden Code in die Command-Line ein: git config --global user.name 'Dein_Github_UserName'. Beachte: Schreibe den Namen mit die Anf√ºhrungszeichen! Wenn du noch keinen user.name hast, dann gebe folgenden Code in die Command-Line ein: git config --global user.name 'deineEmail@email.ch'. Beachte: Schreibe die Email ohne die Anf√ºhrungszeichen! Check if it worked?: Gebe wieder den Befehl git config --list und schaue bei user.name &amp; user.email, ob dort deine Github Anmelde-Daten √ºbernommen wurden. git push = this is the act of sending to Github. git pull = this is the act of receiving from Github. 8.1.2 2 Key concepts in Git Before starting to work with Git, you need to understand that there are 2 ways of starting a project: 1) Create a `remote` repository on Github and then `cloning` it - via Git - on your local computer to work from there. 2) Creating a repository `locally` on your computer and then - aftre a few months working on this repository - adding it to Github. Depending on which of those 2 different ways you choose to start a project (create a repo right from the get-go on Github VS. work locally and then - after some time - push everything to Github), the Git-Commands will slightly differ. 8.1.2.1 Start Project via Github (remote-possibility) What are the Git-Commands, if you start your project directly by creating a Repo on Github (= possibility 1) above)? git clone https://github.com/joffreymayer/tageb.git == Will clone your remote directory tageb - which is currently on Github on your local computer, which is simpler // more comfy when working on projects =) git status = Assume that you worked on &amp; modified a file on your local computer that you previously had on Github (you cloned the directory with the file in it on your local computer). With the command git status, Git will check whether there is any changes between your local files VS. the files in the remote directory on the Github-Server // -Website. git commit -a -m \"Test comment for a commit\" = If you changed a file locally and you are happy with your results, you will need to make a commit (= save) and add all files (= this is why we have an input // argument -a; the concept of adding will be explored in the chapter below, where you want to put a local repo into Github after a few months) and you also want to document, what exactly you modified, if you need to go back to a previous version of your file (= this is why we have an input // argument -m \"comment is here...\"). git push origin master = If you have done some changes locally on your file, you can now push everything on the Github-Website. git log = see, locally, the history of your git commits. Achtung: When running this command, you might - accidentally - run into a dangerous environment called VIM, which is a terminal-based text-editor. The problem when you are in VIM, is that you might not be able to get out of it. -Solution: To get out of VIM, just type in :q and you will get out of it. git remote -v = This will tell you which URL is the remote on which your repository is hosted. Merke: The URL of your repo is assigned to the variable origin in Git. 8.1.2.2 Start Project via local computer (local-possibility) What commands do you need, when you decide - after a few months working locally on your computer - to put everything on Github (= possibility 2)? git init == To get started, you need to go to your repository with your terminal - e.g. set the working directory with cd Joffrey\\dokumente\\my_project) first - and, then, transform your repository to a Git-Repository by just typing git init into your terminal. git add single_file.txt == After you initialized your repository, you will have an empty git-repository. Git will not track the files in your repository (= untracked files), unless you explicitly point them out via the git add command. If you want to add all files quickly // simultanoeusly: git add . F√ºr genauere Theorie // Erkl√§rung dahinter: Siehe Youtube-Video Coding Train ab 2:10-6:03 git commit -m \"Adding a new comment for my commit\": After having pointed out to Git, which files he needs to track, you can do a commit of the changes of the files you modified, like in possibility 1). Achtung, es gibt einen kleinen Unterschied zu possibility 1): das -a (siehe oben) ist verschwunden, weil wir hier add und commit als zwei separate Schritte betrachten. git remote add origin https://github.com/joffreymayer/new-repo = Because our repository is still currently not on Github, we first need to go on the Github Website and create an empty repository. After having done this, you need to tell Git - with the command git remote add origin + copy-pasting the URL ‚Äúhttps://github.com/joffreymayer/new-repo‚Äù - that this is our local Check if it worked: Type the following into the Terminal git remote -v. It should output the variable name - usually called origin - Note if you want to be fancy: Within git remote add origin, the name origin can be changed to any word you like. This is just the variable name in which your Github-URL will be stored. If there is already a remote with the default name origin but you don‚Äôt like the name, you can change the name by: git remote remove origin ‚Äì&gt; this will delete the remote git remote -v ‚Äì&gt; just to check if step 1) worked ‚Äì&gt; should not output anything git remote add noob https:\\\\github.com\\project-1 ‚Äì&gt; now, re-name the remote and call it noob git push origin master == Finally, you will be able to put all your files into the freshly made remote-repository on Github. git pull origin master == Assume that you did changes remotly on Github but not yet locally on your computer. This does not matter, since you can just enter the command git pull origin master to be able to retrieve the changes that you did remotly on Github onto your local computer =) 8.1.3 Working with Branches Basics: Tutorial for branches? Look at youtube-videos from Coding Train. git branch new_branch == this will create a branch locally on your computer git checkout new_branch == this will tell Git: ‚Äúah, he wants to go into the branch called ‚Äònew_branch‚Äô‚Äù. git branch == this will give you a list of all the branches you ave created locally. Furthermore, it will tell you on which branch you currently work on. Achtung: BEFORE you create a new branch, make sure to have committed every change, because git will be very confused otherwise! Alternatively, to create a new branch AND switch to it at the same time, you can use the short-hand command in the terminal: git checkout -b NEW_BRANCH_NAME 8.1.3.1 Merge Changes in ‚Äúnew branch‚Äù into ‚ÄúMaster‚Äù-Branch How to merge the changes you made on a separate branch to the master-branch (= main branch)? git branch new_branch == this will create a branch called new_branch locally on your computer. git checkout new_branch == You will tell Git: ‚ÄúI now want to work on this newly created branch called ‚Äònew_branch‚Äô‚Äù. git checkout master == After you are happy with the changes you did in new_branch you will need to prepare for the merging by switching to your main-branch, which is the master-branch. git merge new_branch == Since you currently are in the master-branch, Git will know that you want to merge new_branch into the master-branch. Achtung: BEFORE you merge back your changes that are on your branch, make sure to commit every change, because git will NOT allow you to switch to your master-branch otherwise! 8.1.4 Set-Up an SSH-Key for Github Whenever you will work with Git and Github, you will always need to type in your password, whenever you push something to the Github-Cloud. That‚Äôs why you should start using an SSH-Key, giving Github your public-key and your computer the private-key. I recommend you the following procedure: Create a Github-Account. We also need to download Git, a Version-Control System, because you can track all your changes and it is easier to collaborate on Code-Projects. Next, we need to link our Github-Account to Git. To do this, use the Terminal and type in the following two commands: 3.1) git config --global user.name \"YOUR GIBHUB USERNAME HERE\" 3.2) git config --global user.email \"your_github_email@example.com\" Follow the instruction of this Youtube-Tutorial (ab 2:40-4:03). In order to be able to use the SSH-Key, you need to follow my instruction in the Video on my local computer, situated on the following path: /Users/jomaye/Nextcloud/Dokumente/Life/Video Tutorials/Github/ssh-key-zum-laufen-bringen.mov. If the Git code that I provided in the video does not work, then I recommend you to also try this code out: git remote set-url --add --push origin git@github.com:yourGithubUsername/yourRepo.git =) That was it üòé "],["gsap.html", "Chapter 9 GSAP 9.1 Advantages of using GSAP 9.2 API 9.3 Synonyme", " Chapter 9 GSAP GSAP is a JavaScript library to handle animations. It can be used for: Lazy Loading Images: This is the main purpose of why I am using GSAP, since it allows me to load images only when they enter the viewport // visible screen of the user. 9.1 Advantages of using GSAP It is free for you to use (as long don‚Äôt sell projects to anyone). There are many examples of implementations on Codepen. 9.2 API Tween (all these methods return a Tween-Instance): gsap.to() Example: gsap.to(\".box\", {rotation: 27, x: 100, duration: 1}); gsap.from() gsap.fromTo() Quelle: https://greensock.com/docs/v3/GSAP/Tween Timelines: Animate multiple objects, one after the other. It acts as a container for Tweens, making it simple to control them as a whole ‚Äì&gt; you don‚Äôt need to add a delay-animation after every following object. Quelle: https://greensock.com/docs/v3/GSAP/Timeline 9.2.1 Most frequent Methods when using Tweens-Classes pause( atTime:Number, suppressEvents:Boolean ): Pauses the instance, optionally jumping to a specific time. Quelle: https://greensock.com/docs/v3/GSAP/Tween/pause() progress( value:Number, suppressEvents:Boolean ): Gets or sets the tween‚Äôs progress which is a value between 0 and 1 indicating the position of the virtual playhead (excluding repeats) where 0 is at the beginning, 0.5 is halfway complete, and 1 is complete. Quelle: https://greensock.com/docs/v3/GSAP/Tween/progress() restart( includeDelay:Boolean, suppressEvents:Boolean ): Restarts and begins playing forward from the beginning. Quelle: https://greensock.com/docs/v3/GSAP/Tween/restart() resume(): Resumes (= Forstsetzung) playing (= Wiedergabe) without altering direction (forward or reversed). Quelle: https://greensock.com/docs/v3/GSAP/Tween/resume() reverse( from:*, suppressEvents:Boolean ): Reverses playback so that all aspects of the animation are oriented backwards including, for example, a tween‚Äôs ease. Quelle: https://greensock.com/docs/v3/GSAP/Tween/reverse() reverse( time:*, suppressEvents:Boolean ): Jumps to a specific time without affecting whether or not the instance is paused or reversed. Quelle: https://greensock.com/docs/v3/GSAP/Tween/seek() time( value:Number, suppressEvents:Boolean ): Gets or sets the local position of the playhead (essentially the current time), not including any repeats or repeatDelays. Quelle: https://greensock.com/docs/v3/GSAP/Tween/time() duration( value:Number ): Gets or sets the animation‚Äôs duration, not including any repeats or repeatDelays. Quelle: https://greensock.com/docs/v3/GSAP/Tween/duration() timeScale( value:Number ): Factor that‚Äôs used to scale time in the animation where 1 = normal speed (the default), 0.5 = half speed, 2 = double speed, -1 = go backwards at normal speed, etc. Quelle: https://greensock.com/docs/v3/GSAP/Tween/timeScale() kill( target:Object, propertiesList:String ): Kills the animation entirely or in part depending on the parameters. Simply calling kill() (without using any parameters // inputs) will immediately stop the animation, remove it from its parent timeline, wipe out any property tweens and release it for garbage collection. Quelle: https://greensock.com/docs/v3/GSAP/Tween/kill() 9.3 Synonyme Targets // Objects you want to animate inputs // parameters "]]
